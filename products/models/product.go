// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Product Product type.
// swagger:model Product
type Product struct {

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// deleted at
	DeletedAt string `json:"deleted_at,omitempty"`

	// the description for  this product.
	// required: true.
	Description string `json:"description,omitempty"`

	// the id for this user.
	// Required: true
	// Minimum: 1
	ID *int64 `json:"id"`

	// the name for this product.
	// required: true.
	Name string `json:"name,omitempty"`

	// the price for this product.
	// required: true.
	// greater than: 0
	Price float32 `json:"price,omitempty"`

	// the sku for this product.
	// it should be a valid sku format.
	// required: true.
	SKU string `json:"sku,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`
}

// Validate validates this product
func (m *Product) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Product) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.MinimumInt("id", "body", int64(*m.ID), 1, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Product) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Product) UnmarshalBinary(b []byte) error {
	var res Product
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
